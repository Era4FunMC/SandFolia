From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: wangxyper <wangxyper@163.com>
Date: Sat, 30 Sep 2023 08:34:17 +0800
Subject: [PATCH] Add empty config


diff --git a/src/main/java/org/era4funmc/sandfolia/SandFoliaConfig.java b/src/main/java/org/era4funmc/sandfolia/SandFoliaConfig.java
new file mode 100644
index 0000000000000000000000000000000000000000..af974e5593fbfdfde8e81fa5208e6531f660c9bc
--- /dev/null
+++ b/src/main/java/org/era4funmc/sandfolia/SandFoliaConfig.java
@@ -0,0 +1,76 @@
+package org.era4funmc.sandfolia;
+
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.bukkit.configuration.InvalidConfigurationException;
+import org.bukkit.configuration.file.YamlConfiguration;
+
+import java.io.File;
+import java.io.IOException;
+import java.util.List;
+
+public class SandFoliaConfig {
+    //All values
+
+    //Gameplay
+    //
+
+    private static final YamlConfiguration configEntry = new YamlConfiguration();
+    private static final File CONFIG_FILE = new File("molia.yml");
+    private static final Logger logger = LogManager.getLogger();
+
+
+    public static void loadAllValues(){
+
+        save();
+    }
+
+    public static void init(){
+        try {
+            configEntry.load(CONFIG_FILE);
+        }catch (IOException ignored){
+        } catch (InvalidConfigurationException e) {
+            logger.error(e);
+        }
+        configEntry.options().copyDefaults(true);
+        loadAllValues();
+    }
+
+    public static double getDouble(String key,double def){
+        configEntry.addDefault(key,def);
+        return configEntry.getDouble(key);
+    }
+
+    public static List<String> getStringList(String key, List<String> def){
+        configEntry.addDefault(key,def);
+        return configEntry.getStringList(key);
+    }
+
+    public static void save(){
+        try {
+            configEntry.save(CONFIG_FILE);
+        } catch (IOException e) {
+            logger.error(e);
+        }
+    }
+
+    public static int getInt(String key,int def){
+        configEntry.addDefault(key,def);
+        return configEntry.getInt(key);
+    }
+
+    public static long getLong(String key,int def){
+        configEntry.addDefault(key,def);
+        return configEntry.getLong(key);
+    }
+
+    public static String getString(String key,String def){
+        configEntry.addDefault(key,def);
+        return configEntry.getString(key);
+    }
+
+    public static boolean getBoolean(String key,boolean def){
+        configEntry.addDefault(key,def);
+        return configEntry.getBoolean(key);
+    }
+}
